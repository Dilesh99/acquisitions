name: Tests

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      NODE_OPTIONS: --experimental-vm-modules
      DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        id: test
        run: npm test -- --coverage
        continue-on-error: true

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30

      - name: Generate test summary
        if: always()
        run: |
          echo "## Test Results 🧪" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.test.outcome }}" == "success" ]; then
            echo "✅ **All tests passed!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Coverage Status" >> $GITHUB_STEP_SUMMARY
            echo "Coverage reports have been uploaded as artifacts and are available for 30 days." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Tests failed!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please review the test output above for details on which tests failed." >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "**Node Version:** 20.x" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** test" >> $GITHUB_STEP_SUMMARY

      - name: Annotate test failures
        if: steps.test.outcome == 'failure'
        run: |
          echo "::error::Test suite failed! Please check the test output for details."
          echo "::warning::Some tests did not pass. Review the logs above to identify failing tests."
          exit 1

      - name: Success message
        if: steps.test.outcome == 'success'
        run: echo "✅ All tests passed successfully with coverage reports generated!"
